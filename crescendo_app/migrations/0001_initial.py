# Generated by Django 3.2.12 on 2022-03-05 18:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=300)),
                ('rating', models.IntegerField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numberOfComments', models.IntegerField(default=0)),
                ('numberOfProfileViews', models.IntegerField(default=0)),
                ('image', models.ImageField(blank=True, upload_to='profile_images')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('artist', models.CharField(max_length=300)),
                ('numberOfComments', models.IntegerField()),
                ('image', models.ImageField(blank=True, upload_to='song_images')),
                ('lyrics', models.CharField(max_length=1000)),
                ('actualSong', models.FileField(upload_to='music_files')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('genre', models.ManyToManyField(to='crescendo_app.Genre')),
            ],
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('views', models.IntegerField(default=0)),
                ('numberOfComments', models.IntegerField(default=0)),
                ('description', models.CharField(max_length=300)),
                ('image', models.ImageField(blank=True, upload_to='playlist_images')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('genre', models.ManyToManyField(to='crescendo_app.Genre')),
            ],
        ),
        migrations.CreateModel(
            name='SongComment',
            fields=[
                ('comment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='crescendo_app.comment')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crescendo_app.song')),
            ],
            bases=('crescendo_app.comment',),
        ),
        migrations.CreateModel(
            name='PlaylistComment',
            fields=[
                ('comment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='crescendo_app.comment')),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crescendo_app.playlist')),
            ],
            bases=('crescendo_app.comment',),
        ),
    ]
